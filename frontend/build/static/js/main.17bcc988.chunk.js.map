{"version":3,"sources":["context/auth.js","components/header.js","components/form.js","pages/user.js","components/shopCard.js","hooks/usehttp.js","pages/shops.js","components/appWrapper.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","isLogin","login","logout","Header","context","useContext","AuthContext","theme","mode","style","float","lineHeight","Item","to","onClick","withRouter","Form","create","name","props","auth","useState","loading","setLoading","getFieldDecorator","form","onSubmit","e","preventDefault","validateFields","err","values","fetch","type","credentials","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","status","history","push","catch","console","log","className","rules","required","message","prefix","color","placeholder","htmlType","User","maxWidth","marginLeft","marginRight","marginTop","ShopCard","setloading","mutate","id","endpoint","delete","lg","xs","sm","md","title","bordered","cover","alt","src","img","nearby","useHttp","dependencies","fetchedData","setFetchedData","useEffect","Shops","shops","setShops","deleteShop","filter","shop","_id","Title","Typography","listShops","map","key","level","gutter","Wrapper","islogin","setLogin","Provider","value","children","App","Content","padding","Consumer","path","exact","render","Footer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17bcc988.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n  isLogin: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});","import React, { useContext } from 'react';\r\n\r\nimport AuthContext from '../context/auth';\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\n\r\nfunction Header(){\r\n\r\n    const context = useContext(AuthContext);\r\n    \r\n    const nav = () => {\r\n        if(context.isLogin)\r\n            return <Menu theme=\"dark\" mode=\"horizontal\" style={{float: 'right', lineHeight: '64px'}}>\r\n                        <Menu.Item><Link to=\"/nearby\">Nearby</Link></Menu.Item>\r\n                        <Menu.Item><Link to=\"/preferred\">preferred Shops</Link></Menu.Item>\r\n                        <Menu.Item onClick={context.logout}>Logout</Menu.Item>\r\n                    </Menu>;\r\n        else\r\n            return <Menu theme=\"dark\" mode=\"horizontal\" style={{float: 'right', lineHeight: '64px'}}>\r\n                        <Menu.Item><Link to=\"/login\">Login</Link></Menu.Item>\r\n                        <Menu.Item><Link to=\"/signup\">Signup</Link></Menu.Item>\r\n                    </Menu>;\r\n    }\r\n\r\n    return  nav();\r\n\r\n}\r\n\r\nexport default Header;","import React, { useContext, useState } from 'react';\r\n\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport AuthContext from '../context/auth';\r\n\r\nfunction FormAuth(props){\r\n\r\n    const auth = {'login': ['Log in', 'register now!', '/signup'],\r\n                  'signup': ['Sign up', 'login now!', '/login']};\r\n    const url = '/api/user/';\r\n\r\n    const context = useContext(AuthContext);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        props.form.validateFields((err, values) => {\r\n            if(err)\r\n                setLoading(false);\r\n            fetch(url+props.type, {\r\n                credentials: 'include',\r\n                method: 'POST',\r\n                headers: {'Content-Type':'application/json'},\r\n                body: JSON.stringify(values)\r\n            }).then(response => {\r\n                setLoading(false);\r\n                if (!response.ok) \r\n                  throw new Error('Failed to fetch.')\r\n                return response.json();\r\n            }).then(data => {\r\n                setLoading(false);\r\n                if(data.status === 'ok'){\r\n                    context.login();\r\n                    props.history.push('/nearby');\r\n                }\r\n                if(data.status === 'error')\r\n                    throw new Error(data.data);\r\n            }).catch(err => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n        });\r\n    };\r\n\r\n    const { form } = props;\r\n    const { getFieldDecorator } = form;\r\n    return  <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{ required: true, message: 'Please input your email!' }],\r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        placeholder=\"Email\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button loading={loading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        {auth[props.type][0]}\r\n                    </Button>\r\n                       <span className=\"option2\">Or <Link to={auth[props.type][2]}>{auth[props.type][1]}</Link></span>\r\n                </Form.Item>\r\n            </Form>;\r\n\r\n}\r\n\r\nexport default withRouter(Form.create({ name: 'authForm' })(FormAuth));","import React from 'react';\r\n\r\nimport { Card } from 'antd';\r\nimport FormAuth from '../components/form'\r\n\r\nfunction User(props){\r\n\r\n    return <Card style={{maxWidth: 300, marginLeft: 'auto', marginRight: 'auto', marginTop: 20}}>\r\n                <FormAuth type={props.type}/>\r\n            </Card>;\r\n\r\n}\r\n\r\nexport default User;","import React, {useState} from 'react';\r\n\r\nimport { Col, Card, Button } from 'antd';\r\n\r\nfunction ShopCard(props){\r\n\r\n    const [loading, setloading] = useState(false);\r\n\r\n    const url = '/api/shops/';\r\n\r\n    const mutate = (id, endpoint) => {\r\n        setloading(true);\r\n        fetch(url+endpoint, {\r\n            credentials: 'include',\r\n            method: 'post',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\"id\": id})\r\n        }).then(response => {\r\n            setloading(false);\r\n            if (!response.ok)\r\n              throw new Error('Failed to fetch.')\r\n            return response.json();\r\n        }).then(data => {\r\n            setloading(false);\r\n            if(data.status === 'ok')\r\n                props.delete(id);\r\n            if(data.status === 'error')\r\n                throw new Error(data.data);\r\n        }).catch(err => {\r\n            setloading(false);\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    return  <Col lg={6} xs={24} sm={8} md={8}>\r\n                <Card title={props.name} bordered={false} cover={<img alt={props.name} src={'/images/'+props.img} />}>\r\n                    {props.nearby &&<div>\r\n                        <Button type=\"danger\" loading={loading} onClick={() => mutate(props.id, 'dislike')}>\r\n                            dislike\r\n                        </Button>\r\n                        <Button type=\"primary\" loading={loading} style={{float: 'right'}} onClick={() => mutate(props.id, 'like')}>\r\n                            like\r\n                        </Button></div>}\r\n                    {!props.nearby && <Button loading={loading} type=\"danger\" onClick={() => mutate(props.id, 'remove')}>\r\n                        remove\r\n                    </Button>}\r\n                </Card>\r\n            </Col>;\r\n\r\n\r\n}\r\n\r\nexport default ShopCard;","import { useState, useEffect } from 'react'\r\n\r\nexport const useHttp = (endpoint, dependencies) => {\r\n    \r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const url = '/api/shops/';\r\n\r\n  useEffect(() => {\r\n    setFetchedData([]);\r\n    fetch(url+endpoint, {credentials: 'include'})\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch.')\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n          if(data.status === 'ok')\r\n            setFetchedData(data.data);\r\n          if(data.status === 'error')\r\n            throw new Error(data.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }, dependencies);\r\n\r\n  return [fetchedData, setFetchedData];\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Typography } from 'antd';\r\nimport ShopCard from '../components/shopCard';\r\n\r\nimport { useHttp } from '../hooks/usehttp';\r\n\r\nfunction Shops(props){\r\n    \r\n    const [shops, setShops] = useHttp(props.type, [props.type]);\r\n\r\n    const deleteShop = (id) => {\r\n        setShops(shops.filter(shop => shop._id !== id));\r\n    };\r\n\r\n    const { Title } = Typography;\r\n\r\n    const title = props.type == 'nearby' ? 'Nearby Shops sorted by Distance' : 'Preferred Shops'\r\n\r\n    const listShops = shops.map(shop => <ShopCard delete={deleteShop} key={shop._id} id={shop._id} img={shop.img} name={shop.name} nearby={props.type == 'nearby' ? true : false}/>);\r\n\r\n    return (<div>\r\n                <Title level={2}>\r\n                    {title}\r\n                </Title>\r\n                <Row gutter={16}>\r\n                    {listShops}\r\n                </Row>\r\n            </div>);\r\n\r\n}\r\n\r\nexport default Shops;","import React, {useState} from 'react';\r\n\r\nimport AuthContext from '../context/auth';\r\n\r\n\r\nfunction Wrapper(props){\r\n\r\n    const [islogin, setLogin] = useState(false);\r\n\r\n    const login = () => {\r\n        setLogin(true);\r\n    }\r\n\r\n    const logout = () => {\r\n        fetch('/api/user/logout',{method: 'post'})\r\n        .then(response => {\r\n        if (!response.ok) \r\n            throw new Error('Failed to fetch.')\r\n        return response.json();\r\n        }).then(data => {\r\n            if(data.status === 'ok')\r\n            setLogin(false);\r\n            if(data.status === 'error')\r\n                throw new Error(data.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return <AuthContext.Provider value={{isLogin: islogin, login: login, logout: logout}}>\r\n                {props.children}\r\n            </AuthContext.Provider>;\r\n\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\n\nimport { Route, Switch, Redirect, BrowserRouter as Router } from 'react-router-dom';\n\nimport Header from './components/header';\nimport User from './pages/user';\nimport Shops from './pages/shops';\n\nimport Wrapper from './components/appWrapper';\n\nimport { Layout } from 'antd';\n\nimport './App.css';\n\nimport AuthContext from './context/auth';\n\nfunction App() {\n \n  return (\n    <Wrapper>\n      <Router>\n        <Layout>\n          <Layout.Header>\n            <Header/>\n          </Layout.Header>\n          <Layout.Content style={{padding: '20px 50px'}}>\n            <AuthContext.Consumer>\n              {(context) =>  (\n                <Switch>\n                  <Route path=\"/\" exact render={() => (\n                        context.isLogin ? (\n                          <Redirect to=\"/nearby\"/>\n                        ) : (\n                          <Redirect to=\"/login\"/>\n                        )\n                      )} />\n                  <Route path=\"/preferred\" render={() => (\n                        context.isLogin ? (\n                          <Shops type=\"preferred\"/>\n                        ) : (\n                          <Redirect to=\"/login\"/>\n                        )\n                      )} />\n                  <Route path=\"/nearby\" render={() => (\n                        context.isLogin ? (\n                          <Shops type=\"nearby\"/>\n                        ) : (\n                          <Redirect to=\"/login\"/>\n                        )\n                      )} />\n                  <Route path=\"/login\" render={() => <User type=\"login\"/> } />\n                  <Route path=\"/signup\" render={() => <User type=\"signup\"/> } />\n                  <Route path=\"*\" render={() => <User type=\"login\"/> } />\n                </Switch>\n              ) }\n            </AuthContext.Consumer>\n          </Layout.Content>\n          <Layout.Footer>\n            \n          </Layout.Footer>\n        </Layout>\n      </Router>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}